/*
 * This file is generated by jOOQ.
 */
package org.yagi.motel.kernel.model.dsl.tables.records;


import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.yagi.motel.kernel.model.dsl.tables.State;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StateRecord extends UpdatableRecordImpl<StateRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>state.id</code>.
     */
    public void setId(Byte value) {
        set(0, value);
    }

    /**
     * Getter for <code>state.id</code>.
     */
    public Byte getId() {
        return (Byte) get(0);
    }

    /**
     * Setter for <code>state.is_processed_enable</code>.
     */
    public void setIsProcessedEnable(Byte value) {
        set(1, value);
    }

    /**
     * Getter for <code>state.is_processed_enable</code>.
     */
    public Byte getIsProcessedEnable() {
        return (Byte) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Byte> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StateRecord
     */
    public StateRecord() {
        super(State.STATE);
    }

    /**
     * Create a detached, initialised StateRecord
     */
    public StateRecord(Byte id, Byte isProcessedEnable) {
        super(State.STATE);

        setId(id);
        setIsProcessedEnable(isProcessedEnable);
        resetChangedOnNotNull();
    }
}
